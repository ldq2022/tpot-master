[{'Generation #': '0',
  'Pipeline': 'ExtraTreesClassifier(ZeroCount(input_matrix), bootstrap=False, criterion=gini, max_features=0.8, min_samples_leaf=7, min_samples_split=12, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti', 'wvalues': {'py/tuple': []}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__bootstrap'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__max_features'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_split'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__n_estimators'}],
              'arity': 7,
              'name': 'ExtraTreesClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'ExtraTreesClassifier({0}, {1}, {2}, {3}, {4}, {5}, {6})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'ZeroCount', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'ZeroCount({0})'},
             {'conv_fct': {'py/type': 'builtins.str'}, 'name': 'ARG0', 'py/object': 'deap.gp.Terminal', 'ret': {'py/type': 'numpy.ndarray'}, 'value': 'input_matrix'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__bootstrap=False',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__bootstrap'},
              'value': 'ExtraTreesClassifier__bootstrap=False'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__criterion=gini',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__criterion'},
              'value': 'ExtraTreesClassifier__criterion=gini'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__max_features=0.8',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__max_features'},
              'value': 'ExtraTreesClassifier__max_features=0.8'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__min_samples_leaf=7',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_leaf'},
              'value': 'ExtraTreesClassifier__min_samples_leaf=7'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__min_samples_split=12',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_split'},
              'value': 'ExtraTreesClassifier__min_samples_split=12'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__n_estimators=100',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__n_estimators'},
              'value': 'ExtraTreesClassifier__n_estimators=100'}],
  'statistics': {'crossover_count': 0, 'generation': 0, 'mutation_count': 0, 'predecessor': {'py/tuple': ['ROOT']}}},
 {'Generation #': '0',
  'Pipeline': 'LinearSVC(RBFSampler(input_matrix, gamma=0.75), C=20.0, dual=False, loss=squared_hinge, penalty=l2, tol=1e-05)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti', 'wvalues': {'py/tuple': []}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.LinearSVC__C'},
                       {'py/type': 'tpot.operator_utils.LinearSVC__dual'},
                       {'py/type': 'tpot.operator_utils.LinearSVC__loss'},
                       {'py/type': 'tpot.operator_utils.LinearSVC__penalty'},
                       {'py/type': 'tpot.operator_utils.LinearSVC__tol'}],
              'arity': 6,
              'name': 'LinearSVC',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'LinearSVC({0}, {1}, {2}, {3}, {4}, {5})'},
             {'args': [{'py/type': 'numpy.ndarray'}, {'py/type': 'tpot.operator_utils.RBFSampler__gamma'}],
              'arity': 2,
              'name': 'RBFSampler',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.base.Ret_0'},
              'seq': 'RBFSampler({0}, {1})'},
             {'py/id': 7},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RBFSampler__gamma=0.75',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RBFSampler__gamma'},
              'value': 'RBFSampler__gamma=0.75'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'LinearSVC__C=20.0',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.LinearSVC__C'},
              'value': 'LinearSVC__C=20.0'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'LinearSVC__dual=False',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.LinearSVC__dual'},
              'value': 'LinearSVC__dual=False'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'LinearSVC__loss=squared_hinge',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.LinearSVC__loss'},
              'value': 'LinearSVC__loss=squared_hinge'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'LinearSVC__penalty=l2',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.LinearSVC__penalty'},
              'value': 'LinearSVC__penalty=l2'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'LinearSVC__tol=1e-05',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.LinearSVC__tol'},
              'value': 'LinearSVC__tol=1e-05'}],
  'statistics': {'crossover_count': 0, 'generation': 0, 'mutation_count': 0, 'predecessor': {'py/tuple': ['ROOT']}}},
 {'Generation #': '0',
  'Pipeline': 'RandomForestClassifier(RobustScaler(input_matrix), bootstrap=True, criterion=entropy, max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=17, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti', 'wvalues': {'py/tuple': []}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__max_features'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__n_estimators'}],
              'arity': 7,
              'name': 'RandomForestClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'RandomForestClassifier({0}, {1}, {2}, {3}, {4}, {5}, {6})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'RobustScaler', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'RobustScaler({0})'},
             {'py/id': 7},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__bootstrap=True',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
              'value': 'RandomForestClassifier__bootstrap=True'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__criterion=entropy',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__criterion'},
              'value': 'RandomForestClassifier__criterion=entropy'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__max_features=0.35000000000000003',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__max_features'},
              'value': 'RandomForestClassifier__max_features=0.35000000000000003'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_leaf=18',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_leaf'},
              'value': 'RandomForestClassifier__min_samples_leaf=18'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_split=17',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
              'value': 'RandomForestClassifier__min_samples_split=17'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__n_estimators=100',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__n_estimators'},
              'value': 'RandomForestClassifier__n_estimators=100'}],
  'statistics': {'crossover_count': 0, 'generation': 0, 'mutation_count': 0, 'predecessor': {'py/tuple': ['ROOT']}}},
 {'Generation #': '0',
  'Pipeline': 'DecisionTreeClassifier(MinMaxScaler(input_matrix), criterion=entropy, max_depth=6, min_samples_leaf=20, min_samples_split=13)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti', 'wvalues': {'py/tuple': []}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__max_depth'},
                       {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__min_samples_split'}],
              'arity': 5,
              'name': 'DecisionTreeClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'DecisionTreeClassifier({0}, {1}, {2}, {3}, {4})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'MinMaxScaler', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'MinMaxScaler({0})'},
             {'py/id': 7},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'DecisionTreeClassifier__criterion=entropy',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__criterion'},
              'value': 'DecisionTreeClassifier__criterion=entropy'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'DecisionTreeClassifier__max_depth=6',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__max_depth'},
              'value': 'DecisionTreeClassifier__max_depth=6'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'DecisionTreeClassifier__min_samples_leaf=20',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__min_samples_leaf'},
              'value': 'DecisionTreeClassifier__min_samples_leaf=20'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'DecisionTreeClassifier__min_samples_split=13',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__min_samples_split'},
              'value': 'DecisionTreeClassifier__min_samples_split=13'}],
  'statistics': {'crossover_count': 0, 'generation': 0, 'mutation_count': 0, 'predecessor': {'py/tuple': ['ROOT']}}}]

--------------------------------------------------------------------------------------------

[{'Generation #': '1',
  'Pipeline': 'RandomForestClassifier(RobustScaler(input_matrix), bootstrap=True, criterion=entropy, max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=8, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0,
                                       {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'},
                                                      {'py/tuple': [{'py/reduce': [{'py/type': 'numpy.dtype'}, {'py/tuple': ['f8', False, True]}, {'py/tuple': [3, '<', None, None, None, -1, -1, 0]}]},
                                                                    {'py/b64': 'KreWxbof7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__max_features'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__n_estimators'}],
              'arity': 7,
              'name': 'RandomForestClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'RandomForestClassifier({0}, {1}, {2}, {3}, {4}, {5}, {6})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'RobustScaler', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'RobustScaler({0})'},
             {'conv_fct': {'py/type': 'builtins.str'}, 'name': 'ARG0', 'py/object': 'deap.gp.Terminal', 'ret': {'py/type': 'numpy.ndarray'}, 'value': 'input_matrix'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__bootstrap=True',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
              'value': 'RandomForestClassifier__bootstrap=True'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__criterion=entropy',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__criterion'},
              'value': 'RandomForestClassifier__criterion=entropy'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__max_features=0.35000000000000003',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__max_features'},
              'value': 'RandomForestClassifier__max_features=0.35000000000000003'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_leaf=18',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_leaf'},
              'value': 'RandomForestClassifier__min_samples_leaf=18'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_split=8',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
              'value': 'RandomForestClassifier__min_samples_split=8'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__n_estimators=100',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__n_estimators'},
              'value': 'RandomForestClassifier__n_estimators=100'}],
  'statistics': {'crossover_count': 0,
                 'generation': 1,
                 'mutation_count': 1,
                 'predecessor': {'py/tuple': ['RandomForestClassifier(RobustScaler(input_matrix), RandomForestClassifier__bootstrap=True, RandomForestClassifier__criterion=entropy, '
                                              'RandomForestClassifier__max_features=0.35000000000000003, RandomForestClassifier__min_samples_leaf=18, RandomForestClassifier__min_samples_split=17, '
                                              'RandomForestClassifier__n_estimators=100)']}}},
 {'Generation #': '1',
  'Pipeline': 'ExtraTreesClassifier(ZeroCount(input_matrix), bootstrap=False, criterion=gini, max_features=0.8, min_samples_leaf=7, min_samples_split=12, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 'rhopTacI7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__bootstrap'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__max_features'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_split'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__n_estimators'}],
              'arity': 7,
              'name': 'ExtraTreesClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'ExtraTreesClassifier({0}, {1}, {2}, {3}, {4}, {5}, {6})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'ZeroCount', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'ZeroCount({0})'},
             {'py/id': 9},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__bootstrap=False',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__bootstrap'},
              'value': 'ExtraTreesClassifier__bootstrap=False'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__criterion=gini',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__criterion'},
              'value': 'ExtraTreesClassifier__criterion=gini'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__max_features=0.8',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__max_features'},
              'value': 'ExtraTreesClassifier__max_features=0.8'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__min_samples_leaf=7',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_leaf'},
              'value': 'ExtraTreesClassifier__min_samples_leaf=7'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__min_samples_split=12',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_split'},
              'value': 'ExtraTreesClassifier__min_samples_split=12'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__n_estimators=100',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__n_estimators'},
              'value': 'ExtraTreesClassifier__n_estimators=100'}],
  'statistics': {'crossover_count': 0, 'generation': 0, 'mutation_count': 0, 'predecessor': {'py/tuple': ['ROOT']}}},
 {'Generation #': '1',
  'Pipeline': 'RandomForestClassifier(RobustScaler(input_matrix), bootstrap=True, criterion=entropy, max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=17, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 'rhopTacI7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'py/id': 5},
             {'py/id': 7},
             {'py/id': 9},
             {'py/id': 10},
             {'py/id': 11},
             {'py/id': 12},
             {'py/id': 13},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_split=17',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
              'value': 'RandomForestClassifier__min_samples_split=17'},
             {'py/id': 15}],
  'statistics': {'crossover_count': 0, 'generation': 0, 'mutation_count': 0, 'predecessor': {'py/tuple': ['ROOT']}}},
 {'Generation #': '1',
  'Pipeline': 'DecisionTreeClassifier(RobustScaler(input_matrix), criterion=entropy, max_depth=6, min_samples_leaf=20, min_samples_split=13)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 's/SWrOLp6z8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__max_depth'},
                       {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__min_samples_split'}],
              'arity': 5,
              'name': 'DecisionTreeClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'DecisionTreeClassifier({0}, {1}, {2}, {3}, {4})'},
             {'py/id': 7},
             {'py/id': 9},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'DecisionTreeClassifier__criterion=entropy',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__criterion'},
              'value': 'DecisionTreeClassifier__criterion=entropy'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'DecisionTreeClassifier__max_depth=6',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__max_depth'},
              'value': 'DecisionTreeClassifier__max_depth=6'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'DecisionTreeClassifier__min_samples_leaf=20',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__min_samples_leaf'},
              'value': 'DecisionTreeClassifier__min_samples_leaf=20'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'DecisionTreeClassifier__min_samples_split=13',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.DecisionTreeClassifier__min_samples_split'},
              'value': 'DecisionTreeClassifier__min_samples_split=13'}],
  'statistics': {'crossover_count': 0,
                 'generation': 1,
                 'mutation_count': 1,
                 'predecessor': {'py/tuple': ['DecisionTreeClassifier(MinMaxScaler(input_matrix), DecisionTreeClassifier__criterion=entropy, DecisionTreeClassifier__max_depth=6, '
                                              'DecisionTreeClassifier__min_samples_leaf=20, DecisionTreeClassifier__min_samples_split=13)']}}}]

--------------------------------------------------------------------------------------------

[{'Generation #': '2',
  'Pipeline': 'RandomForestClassifier(RobustScaler(input_matrix), bootstrap=True, criterion=entropy, max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=8, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0,
                                       {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'},
                                                      {'py/tuple': [{'py/reduce': [{'py/type': 'numpy.dtype'}, {'py/tuple': ['f8', False, True]}, {'py/tuple': [3, '<', None, None, None, -1, -1, 0]}]},
                                                                    {'py/b64': 'KreWxbof7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__max_features'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__n_estimators'}],
              'arity': 7,
              'name': 'RandomForestClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'RandomForestClassifier({0}, {1}, {2}, {3}, {4}, {5}, {6})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'RobustScaler', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'RobustScaler({0})'},
             {'conv_fct': {'py/type': 'builtins.str'}, 'name': 'ARG0', 'py/object': 'deap.gp.Terminal', 'ret': {'py/type': 'numpy.ndarray'}, 'value': 'input_matrix'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__bootstrap=True',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
              'value': 'RandomForestClassifier__bootstrap=True'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__criterion=entropy',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__criterion'},
              'value': 'RandomForestClassifier__criterion=entropy'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__max_features=0.35000000000000003',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__max_features'},
              'value': 'RandomForestClassifier__max_features=0.35000000000000003'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_leaf=18',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_leaf'},
              'value': 'RandomForestClassifier__min_samples_leaf=18'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_split=8',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
              'value': 'RandomForestClassifier__min_samples_split=8'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__n_estimators=100',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__n_estimators'},
              'value': 'RandomForestClassifier__n_estimators=100'}],
  'statistics': {'crossover_count': 0,
                 'generation': 1,
                 'mutation_count': 1,
                 'predecessor': {'py/tuple': ['RandomForestClassifier(RobustScaler(input_matrix), RandomForestClassifier__bootstrap=True, RandomForestClassifier__criterion=entropy, '
                                              'RandomForestClassifier__max_features=0.35000000000000003, RandomForestClassifier__min_samples_leaf=18, RandomForestClassifier__min_samples_split=17, '
                                              'RandomForestClassifier__n_estimators=100)']}}},
 {'Generation #': '2',
  'Pipeline': 'RandomForestClassifier(RobustScaler(input_matrix), bootstrap=True, criterion=entropy, max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=8, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 'KreWxbof7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'py/id': 5}, {'py/id': 7}, {'py/id': 9}, {'py/id': 10}, {'py/id': 11}, {'py/id': 12}, {'py/id': 13}, {'py/id': 14}, {'py/id': 15}],
  'statistics': {'crossover_count': 0,
                 'generation': 1,
                 'mutation_count': 1,
                 'predecessor': {'py/tuple': ['RandomForestClassifier(RobustScaler(input_matrix), RandomForestClassifier__bootstrap=True, RandomForestClassifier__criterion=entropy, '
                                              'RandomForestClassifier__max_features=0.35000000000000003, RandomForestClassifier__min_samples_leaf=18, RandomForestClassifier__min_samples_split=17, '
                                              'RandomForestClassifier__n_estimators=100)']}}},
 {'Generation #': '2',
  'Pipeline': 'ExtraTreesClassifier(ZeroCount(input_matrix), bootstrap=False, criterion=gini, max_features=0.8, min_samples_leaf=5, min_samples_split=12, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 'KreWxbof7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__bootstrap'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__max_features'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_split'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__n_estimators'}],
              'arity': 7,
              'name': 'ExtraTreesClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'ExtraTreesClassifier({0}, {1}, {2}, {3}, {4}, {5}, {6})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'ZeroCount', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'ZeroCount({0})'},
             {'py/id': 9},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__bootstrap=False',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__bootstrap'},
              'value': 'ExtraTreesClassifier__bootstrap=False'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__criterion=gini',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__criterion'},
              'value': 'ExtraTreesClassifier__criterion=gini'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__max_features=0.8',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__max_features'},
              'value': 'ExtraTreesClassifier__max_features=0.8'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__min_samples_leaf=5',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_leaf'},
              'value': 'ExtraTreesClassifier__min_samples_leaf=5'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__min_samples_split=12',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_split'},
              'value': 'ExtraTreesClassifier__min_samples_split=12'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__n_estimators=100',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__n_estimators'},
              'value': 'ExtraTreesClassifier__n_estimators=100'}],
  'statistics': {'crossover_count': 0,
                 'generation': 2,
                 'mutation_count': 1,
                 'predecessor': {'py/tuple': ['ExtraTreesClassifier(ZeroCount(input_matrix), ExtraTreesClassifier__bootstrap=False, ExtraTreesClassifier__criterion=gini, '
                                              'ExtraTreesClassifier__max_features=0.8, ExtraTreesClassifier__min_samples_leaf=7, ExtraTreesClassifier__min_samples_split=12, '
                                              'ExtraTreesClassifier__n_estimators=100)']}}},
 {'Generation #': '2',
  'Pipeline': 'RandomForestClassifier(OneHotEncoder(input_matrix, minimum_fraction=0.2, sparse=False, threshold=10), bootstrap=True, criterion=entropy, max_features=0.35000000000000003, '
              'min_samples_leaf=18, min_samples_split=8, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 'LqRNdVgQ7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'py/id': 5},
             {'args': [{'py/type': 'numpy.ndarray'},
                       {'py/type': 'tpot.operator_utils.OneHotEncoder__minimum_fraction'},
                       {'py/type': 'tpot.operator_utils.OneHotEncoder__sparse'},
                       {'py/type': 'tpot.operator_utils.OneHotEncoder__threshold'}],
              'arity': 4,
              'name': 'OneHotEncoder',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.base.Ret_0'},
              'seq': 'OneHotEncoder({0}, {1}, {2}, {3})'},
             {'py/id': 9},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'OneHotEncoder__minimum_fraction=0.2',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.OneHotEncoder__minimum_fraction'},
              'value': 'OneHotEncoder__minimum_fraction=0.2'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'OneHotEncoder__sparse=False',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.OneHotEncoder__sparse'},
              'value': 'OneHotEncoder__sparse=False'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'OneHotEncoder__threshold=10',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.OneHotEncoder__threshold'},
              'value': 'OneHotEncoder__threshold=10'},
             {'py/id': 10},
             {'py/id': 11},
             {'py/id': 12},
             {'py/id': 13},
             {'py/id': 14},
             {'py/id': 15}],
  'statistics': {'crossover_count': 0,
                 'generation': 2,
                 'mutation_count': 2,
                 'predecessor': {'py/tuple': ['RandomForestClassifier(RobustScaler(input_matrix), RandomForestClassifier__bootstrap=True, RandomForestClassifier__criterion=entropy, '
                                              'RandomForestClassifier__max_features=0.35000000000000003, RandomForestClassifier__min_samples_leaf=18, RandomForestClassifier__min_samples_split=8, '
                                              'RandomForestClassifier__n_estimators=100)']}}}]

--------------------------------------------------------------------------------------------

[{'Generation #': '3',
  'Pipeline': 'RandomForestClassifier(RobustScaler(input_matrix), bootstrap=True, criterion=entropy, max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=8, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0,
                                       {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'},
                                                      {'py/tuple': [{'py/reduce': [{'py/type': 'numpy.dtype'}, {'py/tuple': ['f8', False, True]}, {'py/tuple': [3, '<', None, None, None, -1, -1, 0]}]},
                                                                    {'py/b64': 'KreWxbof7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__max_features'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
                       {'py/type': 'tpot.operator_utils.RandomForestClassifier__n_estimators'}],
              'arity': 7,
              'name': 'RandomForestClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'RandomForestClassifier({0}, {1}, {2}, {3}, {4}, {5}, {6})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'RobustScaler', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'RobustScaler({0})'},
             {'conv_fct': {'py/type': 'builtins.str'}, 'name': 'ARG0', 'py/object': 'deap.gp.Terminal', 'ret': {'py/type': 'numpy.ndarray'}, 'value': 'input_matrix'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__bootstrap=True',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
              'value': 'RandomForestClassifier__bootstrap=True'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__criterion=entropy',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__criterion'},
              'value': 'RandomForestClassifier__criterion=entropy'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__max_features=0.35000000000000003',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__max_features'},
              'value': 'RandomForestClassifier__max_features=0.35000000000000003'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_leaf=18',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_leaf'},
              'value': 'RandomForestClassifier__min_samples_leaf=18'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__min_samples_split=8',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__min_samples_split'},
              'value': 'RandomForestClassifier__min_samples_split=8'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__n_estimators=100',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__n_estimators'},
              'value': 'RandomForestClassifier__n_estimators=100'}],
  'statistics': {'crossover_count': 0,
                 'generation': 1,
                 'mutation_count': 1,
                 'predecessor': {'py/tuple': ['RandomForestClassifier(RobustScaler(input_matrix), RandomForestClassifier__bootstrap=True, RandomForestClassifier__criterion=entropy, '
                                              'RandomForestClassifier__max_features=0.35000000000000003, RandomForestClassifier__min_samples_leaf=18, RandomForestClassifier__min_samples_split=17, '
                                              'RandomForestClassifier__n_estimators=100)']}}},
 {'Generation #': '3',
  'Pipeline': 'RandomForestClassifier(RobustScaler(input_matrix), bootstrap=False, criterion=entropy, max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=8, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 'KreWxbof7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'py/id': 5},
             {'py/id': 7},
             {'py/id': 9},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'RandomForestClassifier__bootstrap=False',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.RandomForestClassifier__bootstrap'},
              'value': 'RandomForestClassifier__bootstrap=False'},
             {'py/id': 11},
             {'py/id': 12},
             {'py/id': 13},
             {'py/id': 14},
             {'py/id': 15}],
  'statistics': {'crossover_count': 0,
                 'generation': 3,
                 'mutation_count': 2,
                 'predecessor': {'py/tuple': ['RandomForestClassifier(RobustScaler(input_matrix), RandomForestClassifier__bootstrap=True, RandomForestClassifier__criterion=entropy, '
                                              'RandomForestClassifier__max_features=0.35000000000000003, RandomForestClassifier__min_samples_leaf=18, RandomForestClassifier__min_samples_split=8, '
                                              'RandomForestClassifier__n_estimators=100)']}}},
 {'Generation #': '3',
  'Pipeline': 'RandomForestClassifier(RobustScaler(input_matrix), bootstrap=True, criterion=entropy, max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=8, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 'KreWxbof7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'py/id': 5}, {'py/id': 7}, {'py/id': 9}, {'py/id': 10}, {'py/id': 11}, {'py/id': 12}, {'py/id': 13}, {'py/id': 14}, {'py/id': 15}],
  'statistics': {'crossover_count': 0,
                 'generation': 1,
                 'mutation_count': 1,
                 'predecessor': {'py/tuple': ['RandomForestClassifier(RobustScaler(input_matrix), RandomForestClassifier__bootstrap=True, RandomForestClassifier__criterion=entropy, '
                                              'RandomForestClassifier__max_features=0.35000000000000003, RandomForestClassifier__min_samples_leaf=18, RandomForestClassifier__min_samples_split=17, '
                                              'RandomForestClassifier__n_estimators=100)']}}},
 {'Generation #': '3',
  'Pipeline': 'ExtraTreesClassifier(ZeroCount(input_matrix), bootstrap=False, criterion=gini, max_features=0.8, min_samples_leaf=5, min_samples_split=12, n_estimators=100)',
  'fitness': {'py/object': 'deap.creator.FitnessMulti',
              'wvalues': {'py/tuple': [-2.0, {'py/reduce': [{'py/function': 'numpy.core.multiarray.scalar'}, {'py/tuple': [{'py/id': 4}, {'py/b64': 'KreWxbof7D8='}]}]}]}},
  'py/object': 'deap.creator.Individual',
  'py/seq': [{'args': [{'py/type': 'tpot.base.Ret_0'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__bootstrap'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__criterion'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__max_features'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_leaf'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_split'},
                       {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__n_estimators'}],
              'arity': 7,
              'name': 'ExtraTreesClassifier',
              'py/object': 'deap.gp.Primitive',
              'ret': {'py/type': 'tpot.gp_types.Output_Array'},
              'seq': 'ExtraTreesClassifier({0}, {1}, {2}, {3}, {4}, {5}, {6})'},
             {'args': [{'py/type': 'numpy.ndarray'}], 'arity': 1, 'name': 'ZeroCount', 'py/object': 'deap.gp.Primitive', 'ret': {'py/type': 'tpot.base.Ret_0'}, 'seq': 'ZeroCount({0})'},
             {'py/id': 9},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__bootstrap=False',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__bootstrap'},
              'value': 'ExtraTreesClassifier__bootstrap=False'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__criterion=gini',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__criterion'},
              'value': 'ExtraTreesClassifier__criterion=gini'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__max_features=0.8',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__max_features'},
              'value': 'ExtraTreesClassifier__max_features=0.8'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__min_samples_leaf=5',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_leaf'},
              'value': 'ExtraTreesClassifier__min_samples_leaf=5'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__min_samples_split=12',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__min_samples_split'},
              'value': 'ExtraTreesClassifier__min_samples_split=12'},
             {'conv_fct': {'py/type': 'builtins.str'},
              'name': 'ExtraTreesClassifier__n_estimators=100',
              'py/object': 'deap.gp.Terminal',
              'ret': {'py/type': 'tpot.operator_utils.ExtraTreesClassifier__n_estimators'},
              'value': 'ExtraTreesClassifier__n_estimators=100'}],
  'statistics': {'crossover_count': 0,
                 'generation': 2,
                 'mutation_count': 1,
                 'predecessor': {'py/tuple': ['ExtraTreesClassifier(ZeroCount(input_matrix), ExtraTreesClassifier__bootstrap=False, ExtraTreesClassifier__criterion=gini, '
                                              'ExtraTreesClassifier__max_features=0.8, ExtraTreesClassifier__min_samples_leaf=7, ExtraTreesClassifier__min_samples_split=12, '
                                              'ExtraTreesClassifier__n_estimators=100)']}}}]

--------------------------------------------------------------------------------------------

